<?xml version="1.0" encoding="UTF-8"?>
<api context="/intelbrasAccount/v1" name="IntelbrasAccountAPI" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/contaIntelbras">
        <inSequence>
            <property expression="json-eval($.lastName)" name="lastName" scope="default" type="STRING"/>
            <property expression="json-eval($.firstName)" name="firstName" scope="default" type="STRING"/>
            <property expression="json-eval($.email)" name="uri.var.email" scope="default" type="STRING"/>
            <payloadFactory media-type="json">
                <format>{
				    "username": "$1",
				    "email": "$1",
				    "password": "7cc9d244-b3d8-4add-9103A",
				    "givenName": "$2",
				    "familyName": "$3",
				    "locale": "pt_BR"
				}</format>
                <args>
                    <arg evaluator="xml" expression="get-property('uri.var.email')"/>
                    <arg evaluator="xml" expression="get-property('firstName')"/>
                    <arg evaluator="xml" expression="get-property('lastName')"/>
                </args>
            </payloadFactory>
            <sequence key="EnvironmentVariablesSequence"/>
            <property expression="get-property('uri.var.intelbrasAccountToken')" name="Authorization" scope="transport" type="STRING"/>
            <property name="Content-Type" scope="transport" type="STRING" value="application/json"/>
            <log level="custom">
                <property expression="$trp:Content-Type" name="--"/>
                <property expression="get-property('firstName')" name="--"/>
                <property expression="get-property('uri.var.intelbrasAccountURL')" name="--"/>
                <property expression="json-eval($)" name="--"/>
            </log>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
            <call>
                <endpoint>
                    <http method="post" uri-template="{+uri.var.intelbrasAccountURL}/me">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <log level="full">
                <property name="--" value="apos criar usuario"/>
                <property expression="$axis2:HTTP_SC" name="--"/>
            </log>
            <filter regex="201" source="$axis2:HTTP_SC">
                <then>
                    <property name="Content-Type" scope="transport" type="STRING" value="application/json"/>
                    <property expression="get-property('uri.var.intelbrasAccountToken')" name="Authorization" scope="transport" type="STRING"/>
                    <call>
                        <endpoint>
                            <http method="patch" uri-template="{+uri.var.intelbrasAccountURL}/admin/otp?username={uri.var.email}">
                                <suspendOnFailure>
                                    <initialDuration>-1</initialDuration>
                                    <progressionFactor>-1</progressionFactor>
                                    <maximumDuration>0</maximumDuration>
                                </suspendOnFailure>
                                <markForSuspension>
                                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                </markForSuspension>
                            </http>
                        </endpoint>
                    </call>
                    <log level="custom">
                        <property name="--" value="apos mandar email"/>
                        <property expression="$axis2:HTTP_SC" name="--"/>
                    </log>
                </then>
                <else>
                    <payloadFactory media-type="text">
                        <format>$1</format>
                        <args>
                            <arg value="The user already existis."/>
                        </args>
                    </payloadFactory>
                </else>
            </filter>
            <log level="full"/>
            <payloadFactory media-type="json">
                <format>
			                { "message":"created"}</format>
                <args/>
            </payloadFactory>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log level="full"/>
        </faultSequence>
    </resource>
    <resource methods="POST" uri-template="/contaIntelbras/criaConta/{email}/{firstName}/{lastName}">
        <inSequence>
            <property expression="substring(get-property('MessageID'), 10, 23) " name="message_id" scope="default" type="STRING"/>
            <property expression="fn:concat(get-property('message_id'),'A')" name="password" scope="default" type="STRING"/>
            <log level="custom">
                <property name="--" value="Entrando na criacao de conta"/>
            </log>
            <payloadFactory media-type="json">
                <format>{
				    "username": "$1",
				    "email": "$1",
				    "password": "$4",
				    "givenName": "$2",
				    "familyName": "$3",
				    "locale": "pt_BR"
				}</format>
                <args>
                    <arg evaluator="xml" expression="get-property('uri.var.email')"/>
                    <arg evaluator="xml" expression="get-property('uri.var.firstName')"/>
                    <arg evaluator="xml" expression="get-property('uri.var.lastName')"/>
                    <arg evaluator="xml" expression="get-property('password')"/>
                </args>
            </payloadFactory>
            <enrich>
                <source clone="true" type="body"/>
                <target property="BODY_TRANSFORMADO" type="property"/>
            </enrich>
            <sequence key="EnvironmentVariablesSequence"/>
            <property expression="get-property('uri.var.intelbrasAccountToken')" name="Authorization" scope="transport" type="STRING"/>
            <property name="Content-Type" scope="transport" type="STRING" value="application/json"/>
            <log level="custom">
                <property expression="$trp:Content-Type" name="--"/>
                <property expression="get-property('firstName')" name="--"/>
                <property expression="get-property('uri.var.intelbrasAccountURL')" name="--"/>
                <property expression="json-eval($)" name="--"/>
            </log>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
            <call>
                <endpoint>
                    <http method="post" uri-template="{+uri.var.intelbrasAccountURL}/me">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <enrich>
                <source clone="true" type="body"/>
                <target property="BODY_RETORNADO" type="property"/>
            </enrich>
            <call-template target="SVC-DBReportEventTemplate">
                <with-param name="origin" value="{$trp:ApplicationName}"/>
                <with-param name="message_id" value="{get-property('MessageID')}"/>
                <with-param name="origin_id" value="{$ctx:uri.var.email}"/>
                <with-param name="system_internal_id" value=""/>
                <with-param name="event_name" value="ContaIntelbras"/>
                <with-param name="event_description" value="Criacao da conta via script"/>
                <with-param name="event_payload" value="{get-property('BODY_TRANSFORMADO')}"/>
                <with-param name="event_payload_returned" value="{get-property('BODY_RETORNADO')}"/>
                <with-param name="http_status_code" value="{$axis2:HTTP_SC}"/>
            </call-template>
            <log level="full"/>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log level="full"/>
        </faultSequence>
    </resource>
    <resource methods="PATCH" uri-template="/contaIntelbras/resetSenhaContaIntelbras/{email}">
        <inSequence>
            <sequence key="EnvironmentVariablesSequence"/>
            <property expression="get-property('uri.var.intelbrasAccountToken')" name="Authorization" scope="transport" type="STRING"/>
            <log level="custom">
                <property expression="$trp:Content-Type" name="--"/>
                <property expression="get-property('uri.var.email')" name="--"/>
            </log>
            <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
            <call>
                <endpoint>
                    <http method="patch" uri-template="{+uri.var.intelbrasAccountURL}/admin/otp?username={uri.var.email}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <call-template target="SVC-DBReportEventTemplate">
                <with-param name="origin" value="{$trp:ApplicationName}"/>
                <with-param name="message_id" value="{get-property('MessageID')}"/>
                <with-param name="origin_id" value="{$ctx:uri.var.email}"/>
                <with-param name="system_internal_id" value=""/>
                <with-param name="event_name" value="ContaIntelbras"/>
                <with-param name="event_description" value="Envio de email"/>
                <with-param name="event_payload" value="-"/>
                <with-param name="event_payload_returned" value="-"/>
                <with-param name="http_status_code" value="{$axis2:HTTP_SC}"/>
            </call-template>
            <log level="custom">
                <property name="--" value="apos mandar email"/>
                <property expression="$axis2:HTTP_SC" name="--"/>
            </log>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log level="custom">
                <property name="fault" value="fault sequence"/>
                <property expression="get-property('ERROR_MESSAGE')" name="fault"/>
            </log>
        </faultSequence>
    </resource>
</api>
